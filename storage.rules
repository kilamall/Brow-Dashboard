rules_version = '2';

// Cloud Storage Security Rules
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             request.auth.token.role == 'admin';
    }
    
    // Hero images - admin upload only
    match /hero-images/{imageId} {
      allow read: if true; // Anyone can view
      allow write: if isAdmin(); // Only admins can upload/delete
    }
    
    // Gallery images - admin upload only
    match /gallery/{imageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Service images - admin upload only
    match /service-images/{serviceId}/{imageId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Profile images - users can manage their own
    match /profile-images/{userId}/{imageId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Temporary profile images during sign-up (before auth)
    // SECURITY: Limited to small files, short-lived, with cleanup
    match /profile-images/temp/{imageId} {
      allow read: if true;
      allow write: if request.resource.size < 5 * 1024 * 1024 // Max 5MB
                   && request.resource.contentType.matches('image/.*') // Images only
                   && request.time < timestamp.date(2025, 12, 31); // Expires end of year
    }
    
    // Skin analysis images - authenticated users ONLY
    match /skin-analysis/{userId}/{imageId} {
      allow read: if request.auth != null && 
                     (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Temporary skin analysis images (fallback for debugging)
    // SECURITY: Limited to small files, short-lived, with cleanup
    match /skin-analysis/{imageId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
                   && request.resource.size < 10 * 1024 * 1024 // Max 10MB
                   && request.resource.contentType.matches('image/.*') // Images only
                   && request.time < timestamp.date(2025, 12, 31); // Expires end of year
    }
    
    // Product analysis images - authenticated users ONLY
    match /product-analysis/{userId}/{imageId} {
      allow read: if request.auth != null && 
                     (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Deny all other paths by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}

